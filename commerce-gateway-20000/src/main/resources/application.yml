server:
  port: 20000
spring:
  application:
    name: commerce-gateway
  cloud:
    gateway:
      routes: # 配置路由  List<RouteDefinition> routes
        - id: member_route01 # 路由的id，唯一
          # 匹配后提供服务的路由地址，也可是外网
          # 如果根据路径匹配成功，最终转发的url:url = http://localhost:10000/member/getMemberById/**
          # 如不成功则返回404错误
          # uri 要从服务注册中心获取
          #          uri: http://localhost:10000 # 服务提供方ip和端口
          # 动态路由  lb:协议名，member-service-provider:注册到Eureka Server 服务名(小写)
          uri: lb://member-service-provider # 服务提供方ip和端口
          predicates: #断言，可以有多种形式的断言
            - Path=/member/getMemberById/**
          #            - After=2024-01-28T13:57:03.955+08:00[Asia/Shanghai]
          #            - Before=2024-01-28T13:57:03.955+08:00[Asia/Shanghai]
          #            - Between=2024-01-28T13:57:03.955+08:00[Asia/Shanghai],2024-01-28T13:57:03.955+08:00[Asia/Shanghai]
          #            - Cookie=user,zhangsan
          #            - Header=X-Request-Id,hello
          #            - Host=**.ls.**
          #            - Method=GET,POST
          #            - Query=email,正则表达式
          #            - RemoteAddr=127.0.0.1
        - id: weight_hight
          uri: http://weighthight.org
          predicates:
            - weight=group1,8
        - id: weight_low
          uri: http://weightlow.org
          predicates:
            - weight=group2,2

# 配置Eureka
eureka:
  instance:
    hostname: commerce-service
  client:
    register-with-eureka: true
    fetch-registry: true
    service-url:
      defaultZone: http://eureka9001.com:9001/eureka/,http://eureka9002.com:9002/eureka/



